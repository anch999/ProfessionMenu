name: Release WoW Addon

on:
  push:
    tags:
      - "*.*.*" # Trigger on tags like v1.2.3

env:
  ADDON_NAME: ProfessionMenu
  ZIP_FILE_NAME: ProfessionMenu

jobs:
  release:
    name: Create Release if New Version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # Fetch tags to get the message
        with:
          fetch-depth: 0 

      - name: Get Tag Message for Release Notes
        id: get_tag_message
        run: |
          # Get the tag message and write it to a temporary file
          tag_message=$(git tag -n99 --format="%(contents)" "${{ github.ref_name }}" | head -n 1)
          
          # Create a file for the release body
          echo "${tag_message}" > RELEASE_BODY.md
          
          # Pass the file path as an output
          echo "release_body_file=RELEASE_BODY.md" >> "$GITHUB_OUTPUT"
          echo "📝 Extracted tag message to RELEASE_BODY.md"


      - name: Prepare release zip
        id: prepare_zip
        run: |
          version="${{ github.ref_name }}"
          
          zip_name="${{ env.ZIP_FILE_NAME }}-v${version}.zip"
          echo "Preparing zip for $ADDON_NAME -> $zip_name"
          
          # Use rsync to copy only the necessary addon folders
          rsync -av --exclude='.git' --exclude='.github' --exclude='*.zip' \
            ProfessionMenu \
            "./temp_build/"
          
          # Navigate into the temporary build directory to zip the addon folder
          cd ./temp_build
          zip -r "../${zip_name}" .
          cd ..
          
          # Set the variables as outputs
          echo "version=${version}" >> "$GITHUB_OUTPUT"
          echo "zip_name=${zip_name}" >> "$GITHUB_OUTPUT"
          echo "✅ Created ${zip_name}"

      - name: Create GitHub Release and Upload Zip
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.prepare_zip.outputs.version }}
          name: ${{ env.ADDON_NAME }} ${{ steps.prepare_zip.outputs.version }}
          files: |
            ${{ steps.prepare_zip.outputs.zip_name }}
          # 💡 New: Use the file created by the previous step as the release body
          body_path: ${{ steps.get_tag_message.outputs.release_body_file }}